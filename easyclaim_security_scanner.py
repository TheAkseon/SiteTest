#!/usr/bin/env python3
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–∫–∞–Ω–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–æ–º–µ–Ω–æ–≤ easyclaim.ru
–°–∫–∞–Ω–∏—Ä—É–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–æ–º–µ–Ω—ã –∏ –ø–æ–¥–¥–æ–º–µ–Ω—ã —Å–∏—Å—Ç–µ–º—ã EasyClaim
"""

import os
import sys
import time
import json
from datetime import datetime
from pathlib import Path

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–∫–∞–Ω–µ—Ä
from enhanced_security_scanner import EnhancedSecurityScanner

class EasyClaimSecurityAnalyzer:
    def __init__(self):
        self.domains = [
            'https://easyclaim.ru',
            'https://www.easyclaim.ru',
            'https://app.easyclaim.ru',
            'https://api.easyclaim.ru'
        ]
        
        self.results = {
            'scan_info': {
                'timestamp': datetime.now().isoformat(),
                'scanner_version': '2.0',
                'domains_scanned': [],
                'total_domains': len(self.domains)
            },
            'domain_results': {},
            'summary': {
                'total_vulnerabilities': 0,
                'critical_issues': 0,
                'high_issues': 0,
                'medium_issues': 0,
                'low_issues': 0,
                'domains_with_issues': 0
            }
        }
        
    def log(self, message, level="INFO"):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        timestamp = time.strftime("%H:%M:%S")
        colors = {
            "INFO": "üìÑ",
            "SUCCESS": "‚úÖ",
            "WARNING": "‚ö†Ô∏è",
            "ERROR": "‚ùå",
            "CRITICAL": "üî¥"
        }
        icon = colors.get(level, "üìÑ")
        print(f"[{timestamp}] {icon} {level}: {message}")
        
    def scan_domain(self, domain_url):
        """–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞"""
        self.log(f"üîç –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ {domain_url}", "INFO")
        
        scanner = EnhancedSecurityScanner(domain_url, delay=1.0)
        
        try:
            scanner.run_comprehensive_scan()
            results = scanner.results
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–º–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö
            self.results['scan_info']['domains_scanned'].append(domain_url)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ–º–µ–Ω–∞
            self.results['domain_results'][domain_url] = results
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —É—è–∑–≤–∏–º–æ—Å—Ç–∏
            domain_vulnerabilities = self.count_vulnerabilities(results)
            
            self.log(f"‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ {domain_url} –∑–∞–≤–µ—Ä—à–µ–Ω–æ", "SUCCESS")
            self.log(f"üìä –ù–∞–π–¥–µ–Ω–æ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: {domain_vulnerabilities['total']}", "INFO")
            
            return domain_vulnerabilities
            
        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è {domain_url}: {e}", "ERROR")
            self.results['domain_results'][domain_url] = {'error': str(e)}
            return {'total': 0, 'critical': 0, 'high': 0, 'medium': 0, 'low': 0}
            
    def count_vulnerabilities(self, results):
        """–ü–æ–¥—Å—á–µ—Ç —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö"""
        severity_counts = {'CRITICAL': 0, 'HIGH': 0, 'MEDIUM': 0, 'LOW': 0}
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–±–ª–µ–º—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        for category, items in results.items():
            if isinstance(items, list):
                for item in items:
                    if isinstance(item, dict) and 'severity' in item:
                        sev = item['severity']
                        if sev in severity_counts:
                            severity_counts[sev] += 1
            elif isinstance(items, dict):
                if 'severity' in items:
                    sev = items['severity']
                    if sev in severity_counts:
                        severity_counts[sev] += 1
                        
        return {
            'total': sum(severity_counts.values()),
            'critical': severity_counts['CRITICAL'],
            'high': severity_counts['HIGH'],
            'medium': severity_counts['MEDIUM'],
            'low': severity_counts['LOW']
        }
        
    def scan_all_domains(self):
        """–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤"""
        self.log("üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ EasyClaim", "INFO")
        print("=" * 80)
        print("üîê –°–ò–°–¢–ï–ú–ê –ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò EasyClaim.ru")
        print("=" * 80)
        print(f"üìÖ –î–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print(f"üéØ –î–æ–º–µ–Ω–æ–≤ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {len(self.domains)}")
        print(f"üåê –î–æ–º–µ–Ω—ã:")
        for i, domain in enumerate(self.domains, 1):
            print(f"   {i}. {domain}")
        print("=" * 80)
        
        start_time = time.time()
        
        for i, domain in enumerate(self.domains, 1):
            self.log(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {i}/{len(self.domains)} - {domain}", "INFO")
            
            vulnerabilities = self.scan_domain(domain)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            self.results['summary']['total_vulnerabilities'] += vulnerabilities['total']
            self.results['summary']['critical_issues'] += vulnerabilities['critical']
            self.results['summary']['high_issues'] += vulnerabilities['high']
            self.results['summary']['medium_issues'] += vulnerabilities['medium']
            self.results['summary']['low_issues'] += vulnerabilities['low']
            
            if vulnerabilities['total'] > 0:
                self.results['summary']['domains_with_issues'] += 1
                
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –¥–æ–º–µ–Ω–∞–º–∏
            if i < len(self.domains):
                self.log(f"‚è∏Ô∏è  –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏ (5 —Å–µ–∫)...", "INFO")
                time.sleep(5)
                
        end_time = time.time()
        total_duration = end_time - start_time
        
        self.log(f"‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ {total_duration:.2f} —Å–µ–∫—É–Ω–¥", "SUCCESS")
        
    def generate_markdown_report(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown"""
        report_content = self._create_markdown_report()
        
        timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
        filename = f'easyclaim_security_report_{timestamp}.md'
        
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(report_content)
            
        self.log(f"üìÑ Markdown –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filename}", "SUCCESS")
        return filename
        
    def _create_markdown_report(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ Markdown –æ—Ç—á–µ—Ç–∞"""
        content = f"""# üîê –û—Ç—á–µ—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ EasyClaim.ru

## üìã –°–≤–æ–¥–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

| –ü–∞—Ä–∞–º–µ—Ç—Ä | –ó–Ω–∞—á–µ–Ω–∏–µ |
|----------|----------|
| **–î–∞—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è** | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')} |
| **–í–µ—Ä—Å–∏—è —Å–∫–∞–Ω–µ—Ä–∞** | 2.0 |
| **–î–æ–º–µ–Ω–æ–≤ –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ** | {len(self.results['domain_results'])}/{len(self.domains)} |
| **–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π** | {self.results['summary']['total_vulnerabilities']} |
| **–î–æ–º–µ–Ω–æ–≤ —Å —É—è–∑–≤–∏–º–æ—Å—Ç—è–º–∏** | {self.results['summary']['domains_with_issues']} |

## üö® –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏

| –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ | –¶–≤–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä |
|---------------|------------|---------------|
| üî¥ **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ** | {self.results['summary']['critical_issues']} | –¢—Ä–µ–±—É—é—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è |
| üü† **–í—ã—Å–æ–∫–∏–µ** | {self.results['summary']['high_issues']} | –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è |
| üü° **–°—Ä–µ–¥–Ω–∏–µ** | {self.results['summary']['medium_issues']} | –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å |
| üîµ **–ù–∏–∑–∫–∏–µ** | {self.results['summary']['low_issues']} | –ú–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤ –ø–ª–∞–Ω–æ–≤–æ–º –ø–æ—Ä—è–¥–∫–µ |

## üåê –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –¥–æ–º–µ–Ω–∞–º

"""
        
        for domain_url in self.domains:
            domain_results = self.results['domain_results'].get(domain_url, {})
            
            if 'error' in domain_results:
                content += f"""### ‚ùå {domain_url} - –û–®–ò–ë–ö–ê –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø

```
{domain_results['error']}
```

"""
                continue
                
            vulnerabilites = self.count_vulnerabilities(domain_results)
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–µ–Ω–µ
            basic_info = domain_results.get('basic_info', {})
            
            content += f"""### üåç {domain_url}

| –ü–∞—Ä–∞–º–µ—Ç—Ä | –ó–Ω–∞—á–µ–Ω–∏–µ |
|----------|----------|
| **–°—Ç–∞—Ç—É—Å** | {basic_info.get('status_code', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')} |
| **–°–µ—Ä–≤–µ—Ä** | {basic_info.get('server', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')} |
| **IP –∞–¥—Ä–µ—Å** | {basic_info.get('ip_address', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')} |
| **–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∞–π—Ç–∞** | {basic_info.get('title', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')} |
| **–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º** | {vulnerabilites['total']} |

#### üö® –ù–∞–π–¥–µ–Ω–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏

"""
            
            if vulnerabilites['total'] == 0:
                content += "‚úÖ **–ü—Ä–æ–±–ª–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ**\n"
            else:
                if vulnerabilites['critical'] > 0:
                    content += f"üî¥ **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ**: {vulnerabilites['critical']}\n"
                if vulnerabilites['high'] > 0:
                    content += f"üü† **–í—ã—Å–æ–∫–∏–µ**: {vulnerabilites['high']}\n"
                if vulnerabilites['medium'] > 0:
                    content += f"üü° **–°—Ä–µ–¥–Ω–∏–µ**: {vulnerabilites['medium']}\n"
                if vulnerabilites['low'] > 0:
                    content += f"üîµ **–ù–∏–∑–∫–∏–µ**: {vulnerabilites['low']}\n"
            
            content += "\n#### üìä –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n\n"

            # SQL Injection
            sql_injections = domain_results.get('sql_injection', [])
            if sql_injections:
                content += "##### üîç SQL Injection\n\n"
                for injection in sql_injections[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    content += f"- **URL**: `{injection['url']}`\n"
                    content += f"  - Payload: `{injection['payload'][:50]}...`\n"
                    content += f"  - –î–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω –ø–∞—Ç—Ç–µ—Ä–Ω: `{injection['error_pattern']}`\n\n"
                
            # XSS
            xss_vulns = domain_results.get('xss_vulnerabilities', [])
            if xss_vulns:
                content += "##### ‚ö° XSS —É—è–∑–≤–∏–º–æ—Å—Ç–∏\n\n"
                for xss in xss_vulns[:3]:
                    content += f"- **URL**: `{xss['url']}`\n"
                    content += f"  - –ü–∞—Ä–∞–º–µ—Ç—Ä: `{xss['parameter']}`\n"
                    content += f"  - Payload: `{xss['payload'][:50]}...`\n\n"
                    
            # Directory Listing
            dir_listing = domain_results.get('directory_listing', [])
            if dir_listing:
                content += "##### üìÅ Directory Listing\n\n"
                for listing in dir_listing[:3]:
                    content += f"- **URL**: `{listing['url']}`\n"
                    content += f"  - –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {listing['content_length']} –±–∞–π—Ç\n\n"
                    
            # Sensitive Files
            sensitive_files = domain_results.get('sensitive_files', [])
            if sensitive_files:
                content += "##### üîê –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã\n\n"
                for file_info in sensitive_files[:3]:
                    content += f"- **URL**: `{file_info['url']}`\n"
                    content += f"  - –†–∞–∑–º–µ—Ä: {file_info['content_length']} –±–∞–π—Ç\n"
                    content += f"  - –°–æ–¥–µ—Ä–∂–∏—Ç —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {'–î–∞' if file_info.get('has_sensitive_data') else '–ù–µ—Ç'}\n\n"
                    
            # Admin Panels
            admin_panels = domain_results.get('admin_panels', [])
            if admin_panels:
                content += "##### üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏\n\n"
                for panel in admin_panels:
                    content += f"- **URL**: `{panel['url']}`\n"
                    content += f"  - –°—Ç–∞—Ç—É—Å: {panel['status_code']}\n"
                    content += f"  - –ó–∞–≥–æ–ª–æ–≤–æ–∫: {panel.get('title', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}\n"
                    content += f"  - –õ–æ–≥–∏–Ω —Ñ–æ—Ä–º–∞: {'–î–∞' if panel.get('has_login_form') else '–ù–µ—Ç'}\n\n"
                    
            # Security Headers
            headers = domain_results.get('headers_security', {})
            if headers:
                content += "##### üõ°Ô∏è –ó–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n\n"
                missing_headers = headers.get('missing_headers', [])
                if missing_headers:
                    content += "**–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏:**\n"
                    for header in missing_headers:
                        content += f"- `{header}`\n"
                    content += "\n"
                else:
                    content += "‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏—Å—É—Ç–Ω—ã\n\n"
                    
            # API Endpoints
            api_endpoints = domain_results.get('exposed_endpoints', [])
            if api_endpoints:
                content += "##### üîå API Endpoints\n\n"
                for endpoint in api_endpoints[:3]:
                    content += f"- **URL**: `{endpoint['url']}`\n"
                    content += f"  - –°—Ç–∞—Ç—É—Å: {endpoint['status_code']}\n"
                    content += f"  - Content-Type: `{endpoint['content_type']}`\n"
                    content += f"  - –ú–µ—Ç–æ–¥—ã: {', '.join(endpoint.get('methods_tested', []))}\n\n"
                    
            # Configuration Issues
            config_issues = domain_results.get('configuration_issues', [])
            if config_issues:
                content += "##### ‚öôÔ∏è –ü—Ä–æ–±–ª–µ–º—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n\n"
                for issue in config_issues[:3]:
                    content += f"- **–¢–∏–ø**: {issue['type']}\n"
                    content += f"  - –ü—Ä–æ–±–ª–µ–º–∞: {issue.get('issue', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    content += f"  - –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: `{issue.get('current_value', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}`\n\n"
                    
            content += "---\n\n"
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        content += """## üõ°Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

### –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1 - –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
"""
        
        if self.results['summary']['critical_issues'] > 0:
            content += """1. **–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏**
   - –ü–∞—Ç—Ä—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
   - –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   - –ü—Ä–æ–≤–µ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π

2. **SQL Injection (–µ—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ)**
   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (prepared statements)
   - –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∏ —Å–∞–Ω–∏—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤—Ö–æ–¥—ã
   - –í–Ω–µ–¥—Ä–∏—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –¥–ª—è –ë–î

3. **–ü—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π**
   - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º –ø–∞–Ω–µ–ª—è–º
   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
   - –í–Ω–µ–¥—Ä–∏—Ç—å –º–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é

"""
        else:
            content += "- ‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ\n\n"

        content += """### –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2 - –í—ã—Å–æ–∫–∏–µ —Ä–∏—Å–∫–∏

1. **–ó–∞—â–∏—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π**
   - –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ IP –∞–¥—Ä–µ—Å–∞–º
   - –í–Ω–µ–¥—Ä–∏—Ç—å strong authentication
   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–ø—ã—Ç–æ–∫ –¥–æ—Å—Ç—É–ø–∞

2. **–ó–∞—â–∏—Ç–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤**
   - –£–¥–∞–ª–∏—Ç—å –∏–ª–∏ –∑–∞—â–∏—Ç–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
   - –°–∫—Ä—ã—Ç—å –±—ç–∫–∞–ø—ã –æ—Ç –≤–µ–±-–¥–æ—Å—Ç—É–ø–∞
   - –û–±–µ—Å–ø–µ—á–∏—Ç—å –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ SSH/SFTP

3. **Directory listing**
   - –û—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–æ–≤
   - –î–æ–±–∞–≤–∏—Ç—å index —Ñ–∞–π–ª—ã –≤ –ø—É—Å—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–ø—Ä–µ—Ç .htaccess

### –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3 - –°—Ä–µ–¥–Ω–∏–µ —Ä–∏—Å–∫–∏

1. **–ó–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏**
   ```apache
   # Apache .htaccess
   Header always set X-Content-Type-Options nosniff
   Header always set X-Frame-Options DENY
   Header always set X-XSS-Protection "1; mode=block"
   Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
   Header always set Content-Security-Policy "default-src 'self'"
   ```

2. **–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤**
   - –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Ç–∏–ø—ã –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤
   - –•—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª—ã –≤–Ω–µ –≤–µ–±-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
   - –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
   - –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤–∏—Ä—É—Å—ã

### –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 4 - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL/TLS**
   - –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ HTTPS –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å HSTS –∑–∞–≥–æ–ª–æ–≤–æ–∫
   - –û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤–µ—Ä—Å–∏–π

2. **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥**
   - –í–Ω–µ–¥—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞–ª–µ—Ä—Ç—ã
   - –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

3. **Backup —Å—Ç—Ä–∞—Ç–µ–≥–∏—è**
   - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –ø–µ—Ä–µ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
   - –í–Ω–µ–¥—Ä–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–∞–ø
   - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è

## üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

### –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ (–ø–æ –¥–æ–º–µ–Ω–∞–º)

"""
        
        for domain_url in self.domains:
            domain_results = self.results['domain_results'].get(domain_url, {})
            tech_info = domain_results.get('technology_identification', {})
            
            if tech_info:
                content += f"#### {domain_url}\n\n"
                for category, technologies in tech_info.items():
                    if technologies:
                        content += f"- **{category}**: {', '.join(technologies)}\n"
                content += "\n"

        content += f"""## üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏

- **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞**: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
- **–í–µ—Ä—Å–∏—è —Å–∫–∞–Ω–µ—Ä–∞**: 2.0
- **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç**

---
*–≠—Ç–æ—Ç –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —Å–∫–∞–Ω–µ—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.*

"""
        
        return content
        
    def save_json_results(self, filename='easyclaim_security_results.json'):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ JSON"""
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(self.results, f, ensure_ascii=False, indent=2)
        self.log(f"üìÑ JSON —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {filename}", "SUCCESS")
        return filename

def main():
    print("üîê EasyClaim.ru - –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Ü–µ–ª–µ–π —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!")
    print("=" * 80)
    
    analyzer = EasyClaimSecurityAnalyzer()
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
        analyzer.scan_all_domains()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        json_file = analyzer.save_json_results()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Markdown –æ—Ç—á–µ—Ç
        md_file = analyzer.generate_markdown_report()
        
        # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å–≤–æ–¥–∫—É
        analyzer.log("üìä –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û", "SUCCESS")
        print("\n" + "="*80)
        print("üéØ –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´")
        print("="*80)
        
        print(f"‚úÖ –î–æ–º–µ–Ω–æ–≤ –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {len(analyzer.results['domain_results'])}/{len(analyzer.domains)}")
        print(f"üìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {analyzer.results['summary']['total_vulnerabilities']}")
        print(f"üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö: {analyzer.results['summary']['critical_issues']}")
        print(f"üü† –í—ã—Å–æ–∫–∏—Ö: {analyzer.results['summary']['high_issues']}")
        print(f"üü° –°—Ä–µ–¥–Ω–∏—Ö: {analyzer.results['summary']['medium_issues']}")
        print(f"üîµ –ù–∏–∑–∫–∏—Ö: {analyzer.results['summary']['low_issues']}")
        print(f"üåê –î–æ–º–µ–Ω–æ–≤ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏: {analyzer.results['summary']['domains_with_issues']}")
        
        print(f"\nüìÑ –§–∞–π–ª—ã –æ—Ç—á–µ—Ç–∞:")
        print(f"   üìä JSON –¥–∞–Ω–Ω—ã–µ: {json_file}")
        print(f"   üìù Markdown –æ—Ç—á–µ—Ç: {md_file}")
        
        if analyzer.results['summary']['total_vulnerabilities'] == 0:
            print(f"\nüéâ –û–¢–õ–ò–ß–ù–û! –°–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        else:
            print(f"\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - —Ç—Ä–µ–±—É—é—Ç—Å—è –º–µ—Ä—ã –ø–æ –∏—Ö —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é")
            
    except KeyboardInterrupt:
        print("\n‚ùå –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
