#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import subprocess
import sys
import time

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"\nüîß {description}")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {command}")
    print("-" * 50)
    
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            if result.stdout:
                print("–í—ã–≤–æ–¥:")
                print(result.stdout)
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã")
            if result.stderr:
                print("–û—à–∏–±–∫–∞:")
                print(result.stderr)
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

def main():
    print("üìö –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    print("=" * 60)
    
    examples = [
        {
            "command": "python security_analyzer.py --url https://100200.ru",
            "description": "–ë–∞–∑–æ–≤–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞"
        },
        {
            "command": "python security_analyzer.py --url https://bansaun.100200.ru --delay 2.0",
            "description": "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–¥–æ–º–µ–Ω–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π"
        },
        {
            "command": "python security_analyzer.py --url https://100200.ru --scan-only",
            "description": "–¢–æ–ª—å–∫–æ –ø–æ–∏—Å–∫ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –±–µ–∑ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤"
        },
        {
            "command": "python security_analyzer.py --url https://100200.ru --extract-only",
            "description": "–¢–æ–ª—å–∫–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –±–µ–∑ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π"
        },
        {
            "command": "python vulnerability_scanner.py --url https://100200.ru --delay 1.5",
            "description": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–∫–∞–Ω–µ—Ä–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π"
        },
        {
            "command": "python template_extractor.py --url https://100200.ru --output my_templates",
            "description": "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –≤ –∫–∞—Å—Ç–æ–º–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
        }
    ]
    
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã:")
    for i, example in enumerate(examples, 1):
        print(f"{i}. {example['description']}")
    
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (1-6) –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞:")
    
    try:
        choice = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: "))
        
        if choice == 0:
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            return
        elif 1 <= choice <= len(examples):
            example = examples[choice - 1]
            
            print(f"\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞:")
            print(f"   {example['command']}")
            print(f"\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
            
            confirm = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): ").strip().lower()
            if confirm in ['y', 'yes', '–¥–∞']:
                run_command(example['command'], example['description'])
            else:
                print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            
    except ValueError:
        print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä")
    except KeyboardInterrupt:
        print("\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")

if __name__ == "__main__":
    main()
